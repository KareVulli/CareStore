/auth/login:
  post:
    tags:
      - authentication
    description: Authenticate a user
    requestBody:
      description: A JSON object containing User credentials
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: foo@bar.com
              password:
                type: string
                example: P2$$w0rd
    responses:
      200:
        description: User successfully authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Logged in successfully
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC...
                user:
                  $ref: '#/components/schemas/User'
      400:
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
            example:
              message: Invalid email or password
      422:
        $ref: '#/components/responses/InvalidInput'
/auth/verify:
  get:
    security:
      - TokenAuth: []
    tags:
      - authentication
    description: Check if current authentication token is valid
    responses:
      200:
        description: Token is valid
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Authenticated
      401:
        $ref: '#/components/responses/Unauthorized'